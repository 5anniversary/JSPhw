/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.34
 * Generated at: 2020-05-24 09:21:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jdbc2;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import lecture1.jdbc2.*;

public final class studentCreate1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("lecture1.jdbc2");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');

	String 에러메시지 = null;
Student student = new Student();
request.setCharacterEncoding("UTF-8");
if (request.getMethod().equals("POST")) {
	student.setStudentNumber(request.getParameter("studentNumber"));
	student.setName(request.getParameter("name"));
	String s = request.getParameter("departmentId");
	student.setDepartmentId(Integer.parseInt(s));
	s = request.getParameter("year");
	student.setYear(Integer.parseInt(s));
	if (student.getStudentNumber() == null || student.getStudentNumber().length() == 0)
		에러메시지 = "학번을 입력하세요";
	else if (student.getName() == null || student.getName().length() == 0)
		에러메시지 = "이름을 입력하세요";
	else if (student.getYear() == 0)
		에러메시지 = "학년을 입력하세요";
	else {
		session.setAttribute("student", student);
		response.sendRedirect("studentCreate_success.jsp");
		return;
	}
}

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n");
      out.write("<script src=\"https://kit.fontawesome.com/68abb170e0.js\"\n");
      out.write("\tcrossorigin=\"anonymous\"></script>\n");
      out.write("<style>\n");
      out.write("div.container {\n");
      out.write("\twidth: 700px;\n");
      out.write("\tmargin: 20px auto;\n");
      out.write("\tfont-size: 11pt;\n");
      out.write("}\n");
      out.write("\n");
      out.write("form {\n");
      out.write("\tpadding: 10px 40px 40px 40px;\n");
      out.write("\twidth: 400px;\n");
      out.write("\tbox-shadow: 0px 0px 4px rgba(0, 0, 0, 0.4), 2px 2px 4px\n");
      out.write("\t\trgba(0, 0, 0, 0.4);\n");
      out.write("}\n");
      out.write("\n");
      out.write("form div {\n");
      out.write("\tmargin-top: 20px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("label {\n");
      out.write("\tdisplay: inline-block;\n");
      out.write("\twidth: 40px;\n");
      out.write("\ttext-align: right;\n");
      out.write("\tmargin-right: 4px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("input[type=text], select {\n");
      out.write("\tpadding: 5px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("input[name=year] {\n");
      out.write("\twidth: 60px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".btn {\n");
      out.write("\tpadding: 0.7em 1.5em;\n");
      out.write("\tborder: 1px solid #aaa;\n");
      out.write("\tborder-radius: 4px;\n");
      out.write("\tbackground: linear-gradient(#fff, #ddd);\n");
      out.write("\tcolor: black;\n");
      out.write("\tfont-family: 굴림체;\n");
      out.write("\tfont-size: 10pt;\n");
      out.write("\tline-height: 1em;\n");
      out.write("\ttext-decoration: none;\n");
      out.write("\tcursor: pointer;\n");
      out.write("\tdisplay: inline-block;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".btn:active {\n");
      out.write("\t-ms-transform: translateY(2px);\n");
      out.write("\t-webkit-transform: translateY(2px);\n");
      out.write("\ttransform: translateY(2px);\n");
      out.write("\tba ckground: #ccc;\n");
      out.write("}\n");
      out.write("\n");
      out.write("div.info {\n");
      out.write("\tmargin-top: 20px;\n");
      out.write("\tpadding: 10px 20px;\n");
      out.write("\tbackground-color: #dff;\n");
      out.write("\tborder: 1px solid #8ff;\n");
      out.write("}\n");
      out.write("\n");
      out.write("div.error {\n");
      out.write("\tmargin-top: 20px;\n");
      out.write("\tpadding: 10px 20px;\n");
      out.write("\tbackground-color: #fdd;\n");
      out.write("\tborder: 1px solid #faa;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t<div class=\"container\">\n");
      out.write("\t\t<form method=\"post\">\n");
      out.write("\t\t\t<h1>학생 등록</h1>\n");
      out.write("\t\t\t<div>\n");
      out.write("\t\t\t\t<label>학번</label> <input type=\"text\" name=\"studentNumber\"\n");
      out.write("\t\t\t\t\tvalue=\"");
      out.print(student.getStudentNumber());
      out.write("\" />\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div>\n");
      out.write("\t\t\t\t<label>이름</label> <input type=\"text\" name=\"name\"\n");
      out.write("\t\t\t\t\tvalue=\"");
      out.print(student.getName());
      out.write("\" />\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div>\n");
      out.write("\t\t\t\t<label>학과</label> <select name=\"departmentId\">\n");
      out.write("\t\t\t\t\t<option value=\"1\"\n");
      out.write("\t\t\t\t\t\t");
      out.print(student.getDepartmentId() == 1 ? "selected" : "");
      out.write(">소프트웨어공학과</option>\n");
      out.write("\t\t\t\t\t<option value=\"2\"\n");
      out.write("\t\t\t\t\t\t");
      out.print(student.getDepartmentId() == 2 ? "selected" : "");
      out.write(">컴퓨터공학과</option>\n");
      out.write("\t\t\t\t\t<option value=\"3\"\n");
      out.write("\t\t\t\t\t\t");
      out.print(student.getDepartmentId() == 3 ? "selected" : "");
      out.write(">정보통신공학과</option>\n");
      out.write("\t\t\t\t\t<option value=\"4\"\n");
      out.write("\t\t\t\t\t\t");
      out.print(student.getDepartmentId() == 4 ? "selected" : "");
      out.write(">글로컬IT공학과</option>\n");
      out.write("\t\t\t\t</select>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div>\n");
      out.write("\t\t\t\t<label>학년</label> <input type=\"text\" name=\"year\"\n");
      out.write("\t\t\t\t\tvalue=\"");
      out.print(student.getYear());
      out.write("\" />\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div>\n");
      out.write("\t\t\t\t<button type=\"submit\" class=\"btn\">\n");
      out.write("\t\t\t\t\t<i class=\"fas fa-check\"></i> 저장\n");
      out.write("\t\t\t\t</button>\n");
      out.write("\t\t\t\t<a class=\"btn\" href=\"studentList1.jsp\"><i class=\"fas fa-ban\"></i>\n");
      out.write("\t\t\t\t\t취소</a>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t");

				if (에러메시지 != null) {
			
      out.write("\n");
      out.write("\t\t\t<div class=\"error\">\n");
      out.write("\t\t\t\t저장 실패:\n");
      out.write("\t\t\t\t");
      out.print(에러메시지);
      out.write("</div>\n");
      out.write("\t\t\t");

				}
			
      out.write("\n");
      out.write("\t\t</form>\n");
      out.write("\t</div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
